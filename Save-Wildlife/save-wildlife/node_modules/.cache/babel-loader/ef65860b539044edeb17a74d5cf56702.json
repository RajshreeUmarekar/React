{"ast":null,"code":"var _jsxFileName = \"E:\\\\React project\\\\react-project\\\\React\\\\my-first-react-app\\\\src\\\\components\\\\MainComponent.js\";\nimport React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Redirect, Route, Switch, withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Category from './CategoryComponent';\nimport Header from './HeaderComponent';\nimport RenderFooter from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport Leader from './LeaderComponent';\nimport SaveWildlife from './SaveWildlifeComponent';\nimport { addSuggestion, fetchSpecies } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    species: state.species,\n    leaders: state.leaders,\n    suggestions: state.suggestions\n  };\n};\n\nconst mapStateToDispatch = dispatch => ({\n  addSuggestion: (author, message) => dispatch(addSuggestion(author, message)),\n  fetchSpecies: () => {\n    dispatch(fetchSpecies());\n  },\n  resetNewsletterForm: () => {\n    dispatch(actions.reset('newsletter'));\n  }\n});\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchSpecies();\n  }\n\n  render() {\n    const HomePage = () => {\n      return /*#__PURE__*/_jsxDEV(Home, {\n        species: this.props.species.species.filter(sp => sp.featured),\n        speciesLoading: this.props.species.isLoading,\n        speciesFailed: this.props.species.errormsg,\n        resetNewsletterForm: this.props.resetNewsletterForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    };\n\n    const LeaderWithId = ({\n      match\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5 mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/home\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/about\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n              active: true,\n              children: \"Team Leaders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Leader, {\n          leader: this.props.leaders.filter(leader => leader.id === parseInt(match.params.leaderId, 10))[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n          classNames: \"page\",\n          timeout: 300,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            location: this.props.location,\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/home\",\n              component: HomePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/category\",\n              component: () => /*#__PURE__*/_jsxDEV(Category, {\n                species: this.props.species.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/contact\",\n              component: Contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/about/leader/:leaderId\",\n              component: LeaderWithId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/savewildlife\",\n              component: () => /*#__PURE__*/_jsxDEV(SaveWildlife, {\n                suggestions: this.props.suggestions,\n                addSuggestion: this.props.addSuggestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, this.props.location.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RenderFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapStateToDispatch)(Main));","map":{"version":3,"sources":["E:/React project/react-project/React/my-first-react-app/src/components/MainComponent.js"],"names":["React","Component","Breadcrumb","BreadcrumbItem","Redirect","Route","Switch","withRouter","Link","connect","TransitionGroup","CSSTransition","Category","Header","RenderFooter","Home","Contact","About","Leader","SaveWildlife","addSuggestion","fetchSpecies","actions","mapStateToProps","state","species","leaders","suggestions","mapStateToDispatch","dispatch","author","message","resetNewsletterForm","reset","Main","componentDidMount","props","render","HomePage","filter","sp","featured","isLoading","errormsg","LeaderWithId","match","leader","id","parseInt","params","leaderId","location","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport Category from './CategoryComponent';\r\nimport Header from './HeaderComponent';\r\nimport RenderFooter from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Leader from './LeaderComponent';\r\nimport SaveWildlife from './SaveWildlifeComponent';\r\nimport { addSuggestion, fetchSpecies } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    species: state.species,\r\n    leaders: state.leaders,\r\n    suggestions: state.suggestions\r\n  }\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  addSuggestion: (author, message) => dispatch(addSuggestion(author, message)),\r\n  fetchSpecies: () => { dispatch(fetchSpecies())},\r\n  resetNewsletterForm: () => {dispatch(actions.reset('newsletter'))}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchSpecies();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        species={this.props.species.species.filter((sp) => sp.featured)} \r\n        speciesLoading={this.props.species.isLoading}\r\n\t\t    speciesFailed={this.props.species.errormsg}\r\n        resetNewsletterForm={this.props.resetNewsletterForm}\r\n        />\r\n      );\r\n    }\r\n    const LeaderWithId = ({match}) => {\r\n      return(\r\n        <div className=\"container mt-5 mb-5\">\r\n          <div className=\"row\">\r\n                  <Breadcrumb>\r\n                      <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                      <BreadcrumbItem><Link to=\"/about\">About</Link></BreadcrumbItem>\r\n                      <BreadcrumbItem active>Team Leaders</BreadcrumbItem>\r\n                  </Breadcrumb>\r\n              </div>\r\n          <Leader leader={this.props.leaders.filter((leader) => leader.id === parseInt(match.params.leaderId, 10))[0]} />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/category\" component={() => <Category species={this.props.species.species} />} />\r\n              <Route exact path=\"/contact\" component={Contact} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route path=\"/about/leader/:leaderId\" component={LeaderWithId} />\r\n              <Route path=\"/savewildlife\" component={() => <SaveWildlife \r\n              suggestions={this.props.suggestions} addSuggestion={this.props.addSuggestion} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        \r\n        <RenderFooter/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapStateToDispatch)(Main));"]},"metadata":{},"sourceType":"module"}